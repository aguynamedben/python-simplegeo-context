#!/usr/bin/env python

import unittest
from decimal import Decimal
import random

from simplegeo.context import Client

MY_OAUTH_KEY = 'my_key'
MY_OAUTH_SECRET = 'my_secret'

API_VERSION = '1.0'
API_HOST = 'api.simplegeo.com'
API_PORT = 80

def random_lat_lon():
    return (random.uniform(-90.0, 90.0), random.uniform(-180.0, 180.0))

class ConsumptionTest(unittest.TestCase):
    def setUp(self):
        self.client = Client(MY_OAUTH_KEY, MY_OAUTH_SECRET, API_VERSION, API_HOST, API_PORT)
        self.known_points = {
            'darrell_k_royal_stadium': {
                'lat': 30.283863,
                'lon': -97.732519,
                'expected_response': EXPECTED_RESPONSES['darrell_k_royal_stadium']
            },
            'att_park': {
                'lat': 37.778434,
                'lon': -122.389146,
                'expected_response': EXPECTED_RESPONSES['att_park']
            },
            'invesco_field': {
                'lat': 39.744026,
                'lon': -105.019893,
                'expected_response': EXPECTED_RESPONSES['invesco_field']
            }
        }

        # Request known points.
        self.known_requests = []
        for (point_name, point) in self.known_points.iteritems():
            point['name'] = point_name
            response = self.client.get_context(point['lat'], point['lon'])
            self.known_points[point_name]['response'] = response
            self.known_requests.append((point, response))

        # Request random points.
        self.random_requests = []
        for i in range(10):
            (lat, lon) = random_lat_lon()
            point = {'lat': lat, 'lon': lon}
            response = self.client.get_context(lat, lon)
            self.random_requests.append((point, response))

    def test_weather(self):
        # Invesco Field should have the weather data.
        point = self.known_points['invesco_field']
        response = point['response']

        self.assertTrue('weather' in response, 'Weather not contained in response for point %s,%s' % (point['lat'], point['lon']))
        self.assertTrue('temperature' in response['weather'], 'Temperature not found in weather in response for point %s,%s' % (point['lat'], point['lon']))
        self.assertEqual(response['weather']['temperature'][-1:], 'F', 'Temperature value %s does not end in F in response for %s,%s' % (response['weather']['temperature'], point['lat'], point['lon']))

    def test_demographics(self):
        # Invesco Field should have the demographic data.
        point = self.known_points['invesco_field']
        response = point['response']

        self.assertTrue('demographics' in response, 'Demographics not found in response for point %s,%s' % (point['lat'], point['lon']))
        self.assertTrue('metro_score' in response['demographics'], 'metro_score not found in demographics section for point %s,%s' % (point['lat'], point['lon']))
        self.assertTrue(0 <= int(response['demographics']['metro_score']) <= 10, 'Invalid value "%s" for metro_score in response for point %s,%s' % (response['demographics']['metro_score'], point['lat'], point['lon']))

    def test_expected_features_are_received(self):
        # Test that all features expected are received
        for (point, response) in self.known_requests:
            for expected_feature in point['expected_response']['features']:
                found_expected_feature = False
                for received_feature in response['features']:
                    if expected_feature == received_feature:
                        found_expected_feature = True
                self.assertTrue(found_expected_feature, 'Could not find expected feature in response for point %s,%s:\n%s' % (point['lat'], point['lon'], expected_feature))

    def test_received_features_are_expected(self):
        # Test that all features received are expected
        for (point, response) in self.known_requests:
            for received_feature in response['features']:
                found_received_feature = False
                for expected_feature in point['expected_response']['features']:
                    if received_feature == expected_feature:
                        found_received_feature = True
                self.assertTrue(found_received_feature, 'Could not find received feature in response for point %s,%s:\n%s' % (point['lat'], point['lon'], received_feature))

    def test_duplicate_handles(self):
        # Tests random requests and known requests.
        for (point, response) in self.known_requests + self.random_requests:
            for (i, feature) in enumerate(response['features']):
                for (j, possible_duplicate_feature) in enumerate(response['features']):
                    if i != j:
                        self.assertNotEqual(feature['handle'], possible_duplicate_feature['handle'], 'Found duplicate handle %s for point %s,%s' % (feature['handle'], point['lat'], point['lon']))
                        # Test for dupes in the first 25 characters of the 
                        self.assertNotEqual(feature['handle'][:25], possible_duplicate_feature['handle'][:25], 'Found duplicate *base* handle %s for point %s,%s' % (feature['handle'][:25], point['lat'], point['lon']))

    def test_duplicate_categories(self):
        # Ensure that we don't have multiple features with specified type/category/subcategory configurations.
        dupe_classifiers = [{'type': 'Region',
                             'category': 'Subnational',
                              'subcategory': 'State'},
                             {'type': 'Region',
                              'category': 'Time Zone',
                              'subcategory': ''},
                             {'type': 'Region',
                              'category': 'National',
                              'subcategory': ''},
                             {'type': 'Region',
                              'category': 'Urban Area',
                              'subcategory': ''},
                             {'type': 'Region',
                              'category': 'US Census',
                              'subcategory': 'Tract'},
                             {'type': 'Region',
                              'category': 'Neighborhood',
                              'subcategory': ''},
                             {'type': 'Region',
                              'category': 'Administrative',
                              'subcategory': 'County'},
                             {'type': 'Region',
                              'category': 'Municiple',
                              'subcategory': 'City'},
                             {'type': 'Region',
                              'category': 'School District',
                              'subcategory': 'Unified'}]
        for (point, response) in self.known_requests:
            for dupe_classifier in dupe_classifiers:
                instances_found = 0
                for feature in response['features']:
                    for classifier in feature['classifiers']:
                        if 'type' in classifier and 'category' in classifier and 'subcategory' in classifier:
                            if dupe_classifier['type'] == classifier['type'] and dupe_classifier['category'] == classifier['category'] and dupe_classifier['subcategory'] == classifier['subcategory']:
                                instances_found += 1
                                self.assertTrue(instances_found <= 1, 'Found dupe for type/categories %s/%s/%s for point %s,%s' % (dupe['type'], dupe['category'], dupe['subcategory'], point['lat'], point['lon']))


EXPECTED_RESPONSES = {
    'darrell_k_royal_stadium': {'demographics': {'metro_score': 9},
 'features': [{'abbr': None,
               'attribution': '(c) OpenStreetMap (http://openstreetmap.org/) and contributors CC-BY-SA (http://creativecommons.org/licenses/by-sa/2.0/)',
               'bounds': [Decimal('-97.733787'),
                          Decimal('30.282636'),
                          Decimal('-97.731332'),
                          Decimal('30.284719')],
               'classifiers': [{'category': 'Arena',
                                'subcategory': 'Stadium',
                                'type': 'Entertainment'}],
               'handle': 'SG_7QeOhXR4dptALoERMRWlBX_30.283681_-97.732557',
               'href': 'http://api.simplegeo.com/1.0/features/SG_7QeOhXR4dptALoERMRWlBX_30.283681_-97.732557.json',
               'license': 'http://creativecommons.org/licenses/by-sa/2.0/',
               'name': 'Darrell K Royal-Texas Memorial Stadium'},
              {'abbr': None,
               'bounds': [Decimal('-97.735709'),
                          Decimal('30.278506'),
                          Decimal('-97.72013'),
                          Decimal('30.297486')],
               'classifiers': [{'category': 'Legislative District',
                                'subcategory': 'Municipal',
                                'type': 'Boundary'}],
               'handle': 'SG_2WMamKxH8LWbSagvs7rnXT_30.288060_-97.728167',
               'href': 'http://api.simplegeo.com/1.0/features/SG_2WMamKxH8LWbSagvs7rnXT_30.288060_-97.728167.json',
               'license': 'http://creativecommons.org/publicdomain/mark/1.0/',
               'name': '0146'},
              {'abbr': None,
               'attribution': '(c) OpenStreetMap (http://openstreetmap.org/) and contributors CC-BY-SA (http://creativecommons.org/licenses/by-sa/2.0/)',
               'bounds': [Decimal('-97.741897'),
                          Decimal('30.274778'),
                          Decimal('-97.721764'),
                          Decimal('30.291944')],
               'classifiers': [{'category': 'Education',
                                'subcategory': 'University',
                                'type': 'Public Place'}],
               'handle': 'SG_5UcxGK9eJy1osUXXnZ40qt_30.284078_-97.732866',
               'href': 'http://api.simplegeo.com/1.0/features/SG_5UcxGK9eJy1osUXXnZ40qt_30.284078_-97.732866.json',
               'license': 'http://creativecommons.org/licenses/by-sa/2.0/',
               'name': 'The University of Texas At Austin'},
              {'abbr': None,
               'bounds': [Decimal('-97.741983'),
                          Decimal('30.274908'),
                          Decimal('-97.721882'),
                          Decimal('30.293307')],
               'classifiers': [{'category': 'Neighborhood',
                                'subcategory': None,
                                'type': 'Boundary'}],
               'handle': 'SG_09DvIpGFBF83IitqjJBDWf_30.284313_-97.733270',
               'href': 'http://api.simplegeo.com/1.0/features/SG_09DvIpGFBF83IitqjJBDWf_30.284313_-97.733270.json',
               'license': 'Not For Redistribution',
               'name': 'UT'},
              {'abbr': None,
               'bounds': [Decimal('-97.735709'),
                          Decimal('30.278506'),
                          Decimal('-97.713564'),
                          Decimal('30.297486')],
               'classifiers': [{'category': 'US Census',
                                'subcategory': 'Tract',
                                'type': 'Boundary'}],
               'handle': 'SG_6USdLOhEJwISEW5pfgl6qP_30.288248_-97.725055',
               'href': 'http://api.simplegeo.com/1.0/features/SG_6USdLOhEJwISEW5pfgl6qP_30.288248_-97.725055.json',
               'license': 'http://creativecommons.org/publicdomain/mark/1.0/',
               'name': '48453000401'},
              {'abbr': None,
               'bounds': [Decimal('-97.753314'),
                          Decimal('30.278506'),
                          Decimal('-97.72013'),
                          Decimal('30.313464')],
               'classifiers': [{'category': 'Postal Code',
                                'subcategory': None,
                                'type': 'Boundary'}],
               'handle': 'SG_1D0rEwHouPxhMPykjtb5RJ_30.293195_-97.737870',
               'href': 'http://api.simplegeo.com/1.0/features/SG_1D0rEwHouPxhMPykjtb5RJ_30.293195_-97.737870.json',
               'license': 'http://creativecommons.org/publicdomain/mark/1.0/',
               'name': '78705'},
              {'abbr': None,
               'bounds': [Decimal('-98.011413'),
                          Decimal('30.097099'),
                          Decimal('-97.620842'),
                          Decimal('30.438391')],
               'classifiers': [{'category': 'School District',
                                'subcategory': 'Unified',
                                'type': 'Boundary'}],
               'handle': 'SG_4EckCuhVNcdrWNqLOht2oV_30.260705_-97.798455',
               'href': 'http://api.simplegeo.com/1.0/features/SG_4EckCuhVNcdrWNqLOht2oV_30.260705_-97.798455.json',
               'license': 'http://creativecommons.org/publicdomain/mark/1.0/',
               'name': 'Austin Independent School District'},
              {'abbr': None,
               'bounds': [Decimal('-97.916667'),
                          Decimal('30.116667'),
                          Decimal('-97.591667'),
                          Decimal('30.591667')],
               'classifiers': [{'category': 'Urban Area',
                                'subcategory': None,
                                'type': 'Boundary'}],
               'handle': 'SG_6WQD51qQfl7wkULHpoguiD_30.359587_-97.750655',
               'href': 'http://api.simplegeo.com/1.0/features/SG_6WQD51qQfl7wkULHpoguiD_30.359587_-97.750655.json',
               'license': 'http://creativecommons.org/publicdomain/mark/1.0/',
               'name': 'Austin'},
              {'abbr': None,
               'bounds': [Decimal('-97.938383'),
                          Decimal('30.098659'),
                          Decimal('-97.561489'),
                          Decimal('30.516863')],
               'classifiers': [{'category': 'Municipal',
                                'subcategory': 'City',
                                'type': 'Boundary'}],
               'handle': 'SG_41bcEmeot99NfzPUAEmAth_30.306437_-97.754767',
               'href': 'http://api.simplegeo.com/1.0/features/SG_41bcEmeot99NfzPUAEmAth_30.306437_-97.754767.json',
               'license': 'http://creativecommons.org/publicdomain/mark/1.0/',
               'name': 'Austin'},
              {'abbr': None,
               'bounds': [Decimal('-98.172977'),
                          Decimal('30.024499'),
                          Decimal('-97.369248'),
                          Decimal('30.628249')],
               'classifiers': [{'category': 'Administrative',
                                'subcategory': 'County',
                                'type': 'Boundary'}],
               'handle': 'SG_1CMF3cFYwUnu109LStqa0u_30.334692_-97.781954',
               'href': 'http://api.simplegeo.com/1.0/features/SG_1CMF3cFYwUnu109LStqa0u_30.334692_-97.781954.json',
               'license': 'http://creativecommons.org/publicdomain/mark/1.0/',
               'name': 'Travis'},
              {'abbr': 'TX',
               'bounds': [Decimal('-106.645646'),
                          Decimal('25.837164'),
                          Decimal('-93.508039'),
                          Decimal('36.500704')],
               'classifiers': [{'category': 'Subnational',
                                'subcategory': 'State',
                                'type': 'Boundary'}],
               'handle': 'SG_0X40atqKxLyVduZutLTA5S_31.447218_-99.317129',
               'href': 'http://api.simplegeo.com/1.0/features/SG_0X40atqKxLyVduZutLTA5S_31.447218_-99.317129.json',
               'license': 'http://creativecommons.org/publicdomain/mark/1.0/',
               'name': 'Texas'},
              {'abbr': None,
               'bounds': [Decimal('-104.983027'),
                          Decimal('25.835548'),
                          Decimal('-84.659531'),
                          Decimal('49.388611')],
               'classifiers': [{'category': 'Time Zone',
                                'subcategory': None,
                                'type': 'Boundary'}],
               'handle': 'SG_7jM3lCPI7D04dgq6Yglzpn_37.960280_-94.829481',
               'href': 'http://api.simplegeo.com/1.0/features/SG_7jM3lCPI7D04dgq6Yglzpn_37.960280_-94.829481.json',
               'license': 'creativecommons.org/publicdomain/zero/1.0/',
               'name': 'America/Chicago'},
              {'abbr': None,
               'bounds': [Decimal('-179.142471'),
                          Decimal('18.930138'),
                          Decimal('179.78115'),
                          Decimal('71.41218')],
               'classifiers': [{'category': 'National',
                                'subcategory': None,
                                'type': 'Boundary'}],
               'handle': 'SG_3uwSAEdXVBzK1ZER9Nqkdp_45.687160_-112.493107',
               'href': 'http://api.simplegeo.com/1.0/features/SG_3uwSAEdXVBzK1ZER9Nqkdp_45.687160_-112.493107.json',
               'license': 'http://creativecommons.org/publicdomain/mark/1.0/',
               'name': 'United States of America'}],
 'query': {'latitude': Decimal('30.283863'),
           'longitude': Decimal('-97.732519')},
 'timestamp': Decimal('1292883445.131')},
    'att_park': {'features': [{'abbr': None,
               'attribution': '(c) OpenStreetMap (http://openstreetmap.org/) and contributors CC-BY-SA (http://creativecommons.org/licenses/by-sa/2.0/)',
               'bounds': [Decimal('-122.39115'),
                          Decimal('37.777233'),
                          Decimal('-122.387775'),
                          Decimal('37.779731')],
               'classifiers': [{'category': 'Arena',
                                'subcategory': 'Stadium',
                                'type': 'Entertainment'}],
               'handle': 'SG_4H2GqJDZrc0ZAjKGR8qM4D_37.778406_-122.389506',
               'href': 'http://api.simplegeo.com/1.0/features/SG_4H2GqJDZrc0ZAjKGR8qM4D_37.778406_-122.389506.json',
               'license': 'http://creativecommons.org/licenses/by-sa/2.0/',
               'name': 'AT&T Park'},
              {'abbr': None,
               'bounds': [Decimal('-122.398281'),
                          Decimal('37.777029'),
                          Decimal('-122.384281'),
                          Decimal('37.796503')],
               'classifiers': [{'category': 'Neighborhood',
                                'subcategory': None,
                                'type': 'Boundary'}],
               'handle': 'SG_6Bv7Cw61hmZjfZ8McTGGM2_37.785379_-122.390793',
               'href': 'http://api.simplegeo.com/1.0/features/SG_6Bv7Cw61hmZjfZ8McTGGM2_37.785379_-122.390793.json',
               'license': 'Not For Redistribution',
               'name': 'South Beach'},
              {'abbr': None,
               'bounds': [Decimal('-122.40499'),
                          Decimal('37.764379'),
                          Decimal('-122.379681'),
                          Decimal('37.783529')],
               'classifiers': [{'category': 'US Census',
                                'subcategory': 'Tract',
                                'type': 'Boundary'}],
               'handle': 'SG_3JxiYHuWo7N9KDYeDSijzl_37.772749_-122.390793',
               'href': 'http://api.simplegeo.com/1.0/features/SG_3JxiYHuWo7N9KDYeDSijzl_37.772749_-122.390793.json',
               'license': 'http://creativecommons.org/publicdomain/mark/1.0/',
               'name': '06075060700'},
              {'abbr': None,
               'bounds': [Decimal('-122.406493'),
                          Decimal('37.749358'),
                          Decimal('-122.379202'),
                          Decimal('37.789791')],
               'classifiers': [{'category': 'Postal Code',
                                'subcategory': None,
                                'type': 'Boundary'}],
               'handle': 'SG_4iNdS13pIvPoUBWBnq0U2f_37.766945_-122.393570',
               'href': 'http://api.simplegeo.com/1.0/features/SG_4iNdS13pIvPoUBWBnq0U2f_37.766945_-122.393570.json',
               'license': 'http://creativecommons.org/publicdomain/mark/1.0/',
               'name': '94107'},
              {'abbr': None,
               'bounds': [Decimal('-123.173825'),
                          Decimal('37.63983'),
                          Decimal('-122.28178'),
                          Decimal('37.929824')],
               'classifiers': [{'category': 'Administrative',
                                'subcategory': 'County',
                                'type': 'Boundary'}],
               'handle': 'SG_7TAYWdlPlAIzUDT7MVwxmZ_37.759717_-122.693971',
               'href': 'http://api.simplegeo.com/1.0/features/SG_7TAYWdlPlAIzUDT7MVwxmZ_37.759717_-122.693971.json',
               'license': 'http://creativecommons.org/publicdomain/mark/1.0/',
               'name': 'San Francisco'},
              {'abbr': None,
               'bounds': [Decimal('-123.173825'),
                          Decimal('37.63983'),
                          Decimal('-122.28178'),
                          Decimal('37.929824')],
               'classifiers': [{'category': 'Municipal',
                                'subcategory': 'City',
                                'type': 'Boundary'}],
               'handle': 'SG_1mNfKHr5aXH7LWgmZL8Uq7_37.759717_-122.693971',
               'href': 'http://api.simplegeo.com/1.0/features/SG_1mNfKHr5aXH7LWgmZL8Uq7_37.759717_-122.693971.json',
               'license': 'http://creativecommons.org/publicdomain/mark/1.0/',
               'name': 'San Francisco'},
              {'abbr': None,
               'bounds': [Decimal('-123.173825'),
                          Decimal('37.63983'),
                          Decimal('-122.28178'),
                          Decimal('37.929824')],
               'classifiers': [{'category': 'School District',
                                'subcategory': 'Unified',
                                'type': 'Boundary'}],
               'handle': 'SG_4wyrIh6TQId1MiL2cfYa5d_37.759717_-122.693971',
               'href': 'http://api.simplegeo.com/1.0/features/SG_4wyrIh6TQId1MiL2cfYa5d_37.759717_-122.693971.json',
               'license': 'http://creativecommons.org/publicdomain/mark/1.0/',
               'name': 'San Francisco Unified School District'},
              {'abbr': None,
               'bounds': [Decimal('-122.516667'),
                          Decimal('37.191667'),
                          Decimal('-121.733333'),
                          Decimal('38.041667')],
               'classifiers': [{'category': 'Urban Area',
                                'subcategory': None,
                                'type': 'Boundary'}],
               'handle': 'SG_4n4ze6xOdAFr0gp1WboZrN_37.551206_-122.127401',
               'href': 'http://api.simplegeo.com/1.0/features/SG_4n4ze6xOdAFr0gp1WboZrN_37.551206_-122.127401.json',
               'license': 'http://creativecommons.org/publicdomain/mark/1.0/',
               'name': 'San Francisco1'},
              {'abbr': 'CA',
               'bounds': [Decimal('-124.482003'),
                          Decimal('32.528832'),
                          Decimal('-114.131211'),
                          Decimal('42.009517')],
               'classifiers': [{'category': 'Subnational',
                                'subcategory': 'State',
                                'type': 'Boundary'}],
               'handle': 'SG_2MySaPILVQG3MoXrsVehyR_37.215297_-119.663837',
               'href': 'http://api.simplegeo.com/1.0/features/SG_2MySaPILVQG3MoXrsVehyR_37.215297_-119.663837.json',
               'license': 'http://creativecommons.org/publicdomain/mark/1.0/',
               'name': 'California'},
              {'abbr': None,
               'bounds': [Decimal('-124.733253'),
                          Decimal('32.534622'),
                          Decimal('-114.039345'),
                          Decimal('49.002892')],
               'classifiers': [{'category': 'Time Zone',
                                'subcategory': None,
                                'type': 'Boundary'}],
               'handle': 'SG_3tLT0I5cOUWIpoVOBeScOx_41.316130_-119.116571',
               'href': 'http://api.simplegeo.com/1.0/features/SG_3tLT0I5cOUWIpoVOBeScOx_41.316130_-119.116571.json',
               'license': 'creativecommons.org/publicdomain/zero/1.0/',
               'name': 'America/Los_Angeles'},
              {'abbr': None,
               'bounds': [Decimal('-179.142471'),
                          Decimal('18.930138'),
                          Decimal('179.78115'),
                          Decimal('71.41218')],
               'classifiers': [{'category': 'National',
                                'subcategory': None,
                                'type': 'Boundary'}],
               'handle': 'SG_3uwSAEdXVBzK1ZER9Nqkdp_45.687160_-112.493107',
               'href': 'http://api.simplegeo.com/1.0/features/SG_3uwSAEdXVBzK1ZER9Nqkdp_45.687160_-112.493107.json',
               'license': 'http://creativecommons.org/publicdomain/mark/1.0/',
               'name': 'United States of America'}],
 'query': {'latitude': Decimal('37.778434'),
           'longitude': Decimal('-122.389146')},
 'timestamp': Decimal('1292883569.878')},
    'invesco_field': {'demographics': {'metro_score': 9},
 'features': [{'abbr': None,
               'attribution': '(c) OpenStreetMap (http://openstreetmap.org/) and contributors CC-BY-SA (http://creativecommons.org/licenses/by-sa/2.0/)',
               'bounds': [Decimal('-105.021684'),
                          Decimal('39.742624'),
                          Decimal('-105.018423'),
                          Decimal('39.745146')],
               'classifiers': [{'category': 'Arena',
                                'subcategory': 'Stadium',
                                'type': 'Entertainment'}],
               'handle': 'SG_2fVsRKtErbeZJcs52XUwIk_39.743886_-105.020051',
               'href': 'http://api.simplegeo.com/1.0/features/SG_2fVsRKtErbeZJcs52XUwIk_39.743886_-105.020051.json',
               'license': 'http://creativecommons.org/licenses/by-sa/2.0/',
               'name': 'Invesco Field at Mile High'},
              {'abbr': None,
               'bounds': [Decimal('-105.025225'),
                          Decimal('39.725319'),
                          Decimal('-105.015637'),
                          Decimal('39.747599')],
               'classifiers': [{'category': 'US Census',
                                'subcategory': 'Tract',
                                'type': 'Boundary'}],
               'handle': 'SG_3O7majtYm480OLz6Tb5loy_39.735809_-105.021085',
               'href': 'http://api.simplegeo.com/1.0/features/SG_3O7majtYm480OLz6Tb5loy_39.735809_-105.021085.json',
               'license': 'http://creativecommons.org/publicdomain/mark/1.0/',
               'name': '08031000800'},
              {'abbr': None,
               'bounds': [Decimal('-105.025338'),
                          Decimal('39.725233'),
                          Decimal('-105.015621'),
                          Decimal('39.747498')],
               'classifiers': [{'category': 'Neighborhood',
                                'subcategory': None,
                                'type': 'Boundary'}],
               'handle': 'SG_5aIM28l5oK5UCmVC2O4huP_39.735617_-105.021119',
               'href': 'http://api.simplegeo.com/1.0/features/SG_5aIM28l5oK5UCmVC2O4huP_39.735617_-105.021119.json',
               'license': 'Not For Redistribution',
               'name': 'Sun Valley'},
              {'abbr': None,
               'bounds': [Decimal('-105.025299'),
                          Decimal('39.740148'),
                          Decimal('-104.995989'),
                          Decimal('39.760591')],
               'classifiers': [{'category': 'Legislative District',
                                'subcategory': 'Municipal',
                                'type': 'Boundary'}],
               'handle': 'SG_1dcdZehYzJrj8RGTRP0TDS_39.749147_-105.012482',
               'href': 'http://api.simplegeo.com/1.0/features/SG_1dcdZehYzJrj8RGTRP0TDS_39.749147_-105.012482.json',
               'license': 'http://creativecommons.org/publicdomain/mark/1.0/',
               'name': 'Precinct 519'},
              {'abbr': None,
               'bounds': [Decimal('-105.038162'),
                          Decimal('39.743451'),
                          Decimal('-104.997607'),
                          Decimal('39.784227')],
               'classifiers': [{'category': 'Postal Code',
                                'subcategory': None,
                                'type': 'Boundary'}],
               'handle': 'SG_1RtJ8mJUCkX90AiKEScBp6_39.767096_-105.019932',
               'href': 'http://api.simplegeo.com/1.0/features/SG_1RtJ8mJUCkX90AiKEScBp6_39.767096_-105.019932.json',
               'license': 'http://creativecommons.org/publicdomain/mark/1.0/',
               'name': '80211'},
              {'abbr': None,
               'bounds': [Decimal('-105.109927'),
                          Decimal('39.614337'),
                          Decimal('-104.600302'),
                          Decimal('39.914247')],
               'classifiers': [{'category': 'Administrative',
                                'subcategory': 'County',
                                'type': 'Boundary'}],
               'handle': 'SG_0aSGDuSeDtvIzbPrdgVMoN_39.762168_-104.875849',
               'href': 'http://api.simplegeo.com/1.0/features/SG_0aSGDuSeDtvIzbPrdgVMoN_39.762168_-104.875849.json',
               'license': 'http://creativecommons.org/publicdomain/mark/1.0/',
               'name': 'Denver'},
              {'abbr': None,
               'bounds': [Decimal('-105.109927'),
                          Decimal('39.614337'),
                          Decimal('-104.600302'),
                          Decimal('39.914247')],
               'classifiers': [{'category': 'Municipal',
                                'subcategory': 'City',
                                'type': 'Boundary'}],
               'handle': 'SG_5mkJIHfzh3DmXAVkL5ns7C_39.762168_-104.875849',
               'href': 'http://api.simplegeo.com/1.0/features/SG_5mkJIHfzh3DmXAVkL5ns7C_39.762168_-104.875849.json',
               'license': 'http://creativecommons.org/publicdomain/mark/1.0/',
               'name': 'Denver'},
              {'abbr': None,
               'bounds': [Decimal('-105.109927'),
                          Decimal('39.614337'),
                          Decimal('-104.600302'),
                          Decimal('39.914247')],
               'classifiers': [{'category': 'School District',
                                'subcategory': 'Unified',
                                'type': 'Boundary'}],
               'handle': 'SG_522ZsELgQtfLcbMKoMPAay_39.762161_-104.875858',
               'href': 'http://api.simplegeo.com/1.0/features/SG_522ZsELgQtfLcbMKoMPAay_39.762161_-104.875858.json',
               'license': 'http://creativecommons.org/publicdomain/mark/1.0/',
               'name': 'Denver County School District 1'},
              {'abbr': None,
               'bounds': [Decimal('-105.241667'),
                          Decimal('39.5'),
                          Decimal('-104.708333'),
                          Decimal('40.025')],
               'classifiers': [{'category': 'Urban Area',
                                'subcategory': None,
                                'type': 'Boundary'}],
               'handle': 'SG_3qkMPICG5pMFYrBwTKJDec_39.731190_-104.984183',
               'href': 'http://api.simplegeo.com/1.0/features/SG_3qkMPICG5pMFYrBwTKJDec_39.731190_-104.984183.json',
               'license': 'http://creativecommons.org/publicdomain/mark/1.0/',
               'name': 'Denver'},
              {'abbr': 'CO',
               'bounds': [Decimal('-109.066811'),
                          Decimal('36.992424'),
                          Decimal('-102.040878'),
                          Decimal('41.003444')],
               'classifiers': [{'category': 'Subnational',
                                'subcategory': 'State',
                                'type': 'Boundary'}],
               'handle': 'SG_3V8cOXsDm6WVfNAC3GYJpr_38.998545_-105.547826',
               'href': 'http://api.simplegeo.com/1.0/features/SG_3V8cOXsDm6WVfNAC3GYJpr_38.998545_-105.547826.json',
               'license': 'http://creativecommons.org/publicdomain/mark/1.0/',
               'name': 'Colorado'},
              {'abbr': None,
               'bounds': [Decimal('-116.050735'),
                          Decimal('30.628255'),
                          Decimal('-100.260872'),
                          Decimal('49.000771')],
               'classifiers': [{'category': 'Time Zone',
                                'subcategory': None,
                                'type': 'Boundary'}],
               'handle': 'SG_4nMNM1ah9tMVutXTI8wSCB_41.330677_-107.469772',
               'href': 'http://api.simplegeo.com/1.0/features/SG_4nMNM1ah9tMVutXTI8wSCB_41.330677_-107.469772.json',
               'license': 'creativecommons.org/publicdomain/zero/1.0/',
               'name': 'America/Denver'},
              {'abbr': None,
               'bounds': [Decimal('-179.142471'),
                          Decimal('18.930138'),
                          Decimal('179.78115'),
                          Decimal('71.41218')],
               'classifiers': [{'category': 'National',
                                'subcategory': None,
                                'type': 'Boundary'}],
               'handle': 'SG_3uwSAEdXVBzK1ZER9Nqkdp_45.687160_-112.493107',
               'href': 'http://api.simplegeo.com/1.0/features/SG_3uwSAEdXVBzK1ZER9Nqkdp_45.687160_-112.493107.json',
               'license': 'http://creativecommons.org/publicdomain/mark/1.0/',
               'name': 'United States of America'}],
 'query': {'latitude': Decimal('39.744026'),
           'longitude': Decimal('-105.019893')},
 'timestamp': Decimal('1292883674.776')}
}

if __name__ == '__main__':
        unittest.main()
